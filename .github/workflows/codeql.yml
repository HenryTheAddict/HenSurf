name: CodeQL

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '0 0 * * *'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  analyze:
    name: Analyze
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    env:
      DEPOT_TOOLS_DIR: ${{ github.workspace }}/depot_tools
      GCLIENT_CACHE_DIR: ${{ github.workspace }}/gclient_cache
      CODEQL_DB_LOC: ${{ github.workspace }}/codeql-db

    steps:
    - name: Free up runner disk space
      run: |
        set -e
        echo "Initial disk space:"
        df -h
        sudo rm -rf /usr/share/dotnet /opt/ghc "/usr/local/share/boost" "$AGENT_TOOLSDIRECTORY" /usr/local/lib/android /opt/hostedtoolcache/CodeQL
        sudo swapoff /swapfile || true
        sudo rm -f /swapfile || true
        sudo apt-get clean
        echo "Disk space after cleanup:"
        df -h

    - name: Checkout HenSurf repository
      uses: actions/checkout@v4
      with:
        path: hensurf

    - name: Cache and Install depot_tools
      uses: actions/cache@v4
      id: cache-depot-tools
      with:
        path: ${{ env.DEPOT_TOOLS_DIR }}
        key: ${{ runner.os }}-depot-tools
    - if: steps.cache-depot-tools.outputs.cache-hit != 'true'
      run: git clone --depth 1 https://chromium.googlesource.com/chromium/tools/depot_tools.git ${{ env.DEPOT_TOOLS_DIR }}
    - name: Add depot_tools to PATH
      run: echo "${{ env.DEPOT_TOOLS_DIR }}" >> $GITHUB_PATH

    - name: Cache GClient Dependencies
      uses: actions/cache@v4
      id: cache-gclient
      with:
        path: ${{ env.GCLIENT_CACHE_DIR }}
        key: ${{ runner.os }}-gclient-cache-${{ hashFiles('hensurf/**/DEPS') }}
        restore-keys: |
          ${{ runner.os }}-gclient-cache-

    - name: Fetch Chromium Source via Sparse Checkout
      run: |
        set -e
        mkdir -p chromium/src
        cd chromium/src
        git init -b main
        git remote add origin https://chromium.googlesource.com/chromium/src.git
        git config extensions.partialClone true
        git config core.sparseCheckout true
        cat <<EOF > .git/info/sparse-checkout
        /build
        /buildtools
        /components/search_engines/
        /components/version_info/
        /base/
        /url/
        /mojo/
        /services/
        /third_party/abseil-cpp/
        /tools/
        EOF
        CHROMIUM_COMMIT_HASH=$(grep -oP "(?<=Var\('chromium_version'\): ')([a-f0-9]{40})(?=')" ${{ github.workspace }}/hensurf/DEPS)
        if [ -z "$CHROMIUM_COMMIT_HASH" ]; then echo "Error: Could not extract 'chromium_version' from DEPS file." && exit 1; fi
        git fetch --depth=1 origin $CHROMIUM_COMMIT_HASH
        git checkout $CHROMIUM_COMMIT_HASH

    - name: Sync GClient DEPS and Runhooks
      working-directory: ${{ github.workspace }}/chromium
      run: |
        set -e
        gclient config --spec 'solutions = [{"name": "src", "url": "https://chromium.googlesource.com/chromium/src.git", "managed": False}]'
        gclient sync -D --nohooks
        gclient runhooks -j8

    - name: Apply HenSurf Patches
      working-directory: ${{ github.workspace }}/chromium/src
      run: |
        chmod +x ${{ github.workspace }}/hensurf/scripts/apply-patches.sh
        CHROMIUM_SRC_DIR="${{ github.workspace }}/chromium/src" \
        bash ${{ github.workspace }}/hensurf/scripts/apply-patches.sh --no-fetch

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: cpp
        queries: security-extended
        db-location: ${{ env.CODEQL_DB_LOC }}
        paths: |
          chromium/src/components/search_engines/
          chromium/src/components/version_info/
        ram: 2048
        threads: 2

    - name: Build Components for CodeQL Tracing
      working-directory: ${{ github.workspace }}/chromium/src
      shell: bash
      run: |
        set -e
        gn gen ${{ github.workspace }}/chromium/out/CodeQL --args='
          is_debug=false
          is_clang=true
          symbol_level=0
          treat_warnings_as_errors=false
          is_component_build=false
          enable_nacl=false
          use_rtti=true
          proprietary_codecs=false
          enable_widevine=false
          enable_webrtc=false
          use_ozone=true
          ozone_platform_headless=true
        '
        autoninja -C ${{ github.workspace }}/chromium/out/CodeQL components/search_engines components/version_info

    - name: Clean build artifacts before analysis
      run: |
        set -e
        echo "Disk space before final cleanup:"
        df -h
        rm -rf ${{ github.workspace }}/chromium
        rm -rf ${{ env.GCLIENT_CACHE_DIR }}
        rm -rf ${{ env.DEPOT_TOOLS_DIR }}
        echo "Disk space after final cleanup:"
        df -h

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3
      with:
        category: "/language:cpp"
        ram: 0
        threads: 0
