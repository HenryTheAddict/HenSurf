# Custom HenSurf Build Arguments for Optimization and ccache

# For Official/Release Builds & Binary Size
is_official_build = true
symbol_level = 1  # 0 for smallest, 1 for minimal symbols for backtraces, 2 for full debug
blink_symbol_level = 0 # Further reduce symbols from Blink

# For Build Time Reduction
treat_warnings_as_errors = false # Halting on warnings can slow down development
enable_nacl = false # Disable Native Client if not needed
use_jumbo_build = true # Merges more C++ files, can speed up builds
use_thin_lto = true # ThinLTO can improve runtime but increase link time; ENABLED for better runtime performance

# ccache integration
use_ccache = true

# Note: target_cpu (e.g., target_cpu = "arm64" or target_cpu = "x64")
# is typically set by the build script (scripts/build.sh) or environment.
# If specified here, it might override the script's logic.
# Example:
# if (host_os == "mac") {
#   if (host_cpu == "arm64") {
#     target_cpu = "arm64"
#   } else {
#     target_cpu = "x64"
#   }
# } else if (host_os == "linux") {
#   # Add linux target_cpu logic if needed, e.g. target_cpu = "x64"
# }
# The existing line "--args=target_cpu=arm64" was removed as it's not standard GN syntax for this file.
# The build.sh script handles setting target_cpu via command line --args.
# If issues arise, this might need to be revisited.
# For example, to explicitly set for common cases if build.sh logic is insufficient:
# default_target_cpu = "x64"
# if (host_os == "mac" && host_cpu == "arm64") {
#   default_target_cpu = "arm64"
# }
# target_cpu = default_target_cpu
